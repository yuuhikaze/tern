export enum FocusCandidate {
    add,
    conversion-engine,
    source-root,
    source-file-extension,
    output-root,
    output-file-extension,
    options,
    ignore-patterns,
    store
}

export global Backend {
    in-out property <int> focus-candidate-index: -1;
    out property <[FocusCandidate]> focus-candidate-list: [
        FocusCandidate.add,
        FocusCandidate.conversion-engine,
        FocusCandidate.source-root,
        FocusCandidate.source-file-extension,
        FocusCandidate.output-root,
        FocusCandidate.output-file-extension,
        FocusCandidate.options,
        FocusCandidate.ignore-patterns,
        FocusCandidate.store
    ];

    out property <FocusCandidate> focus-candidate;
    public function update-focus-candidate(i: int) {
        focus-candidate-index += i;
        if (focus-candidate-index == focus-candidate-list.length) {
            focus-candidate-index = 0;
        } else if (focus-candidate-index == -1) {
            focus-candidate-index = focus-candidate-list.length - 1;
        }
        focus-candidate = focus-candidate-list[focus-candidate-index];
    }

    in property <[string]> available-engines: [];
    in property <[string]> stored-engines: [];

    in property <string> engine;
    in property <string> source-root;
    in property <string> source-file-extension;
    in property <string> output-root;
    in property <string> output-file-extension;
    in property <string> options;
    in property <string> ignore-patterns;

    pure callback store-profile();
    pure callback set-focus-candidate(FocusCandidate);
    pure callback set-stored-and-available-engines();
}
